class Api {
  /* 最小流量变化曲线 */
  _zxllbh(type) {
    let end;
    let res = {
      ssll_data: [
        [1554393600, -757.0],
        [1554397200, 370.0],
        [1554400800, -426.0],
        [1554404400, -375.0],
        [1554408000, -319.0],
        [1554411600, 633.0],
        [1554422400, 734.0],
        [1554426000, -401.0],
        [1554429600, 20.0],
        [1554433200, -11.0],
        [1554436800, -246.0],
        [1554440400, 342.0],
        [1554444000, -228.0],
        [1554447600, 489.0],
        [1554451200, -1411.0],
        [1554454800, 540.0],
        [1554458400, 80.0],
        [1554462000, -214.0],
        [1554465600, -69.0],
        [1554469200, 472.0],
        [1554472800, -313.0],
        [1554476400, -1111.0],
        [1554480000, -1529.0],
        [1554483600, 178.0],
        [1554487200, -404.0],
        [1554490800, -213.0],
        [1554494400, 13.0],
        [1554498000, 418.0],
        [1554501600, 753.0],
        [1554505200, 2711.0],
        [1554508800, 564.0],
        [1554512400, -341.0],
        [1554516000, -288.0],
        [1554519600, 185.0],
        [1554523200, -98.0],
        [1554526800, -491.0],
        [1554530400, -364.0],
        [1554534000, -392.0],
        [1554537600, -192.0],
        [1554541200, 1266.0],
        [1554544800, 182.0],
        [1554548400, -466.0],
        [1554552000, -59.0],
        [1554555600, 670.0],
        [1554559200, -629.0],
        [1554562800, -685.0],
        [1554566400, -998.0],
        [1554570000, -556.0],
        [1554573600, -737.0],
        [1554577200, -187.0],
        [1554580800, -171.0],
        [1554584400, 511.0],
        [1554588000, 1043.0],
        [1554591600, 2451.0],
        [1554595200, 25.0],
        [1554598800, 124.0],
        [1554602400, -284.0],
        [1554606000, 85.0],
        [1554609600, 312.0],
        [1554613200, -380.0],
        [1554616800, 286.0],
        [1554620400, -50.0],
        [1554624000, -170.0],
        [1554627600, -20.0],
        [1554631200, -17.0],
        [1554634800, -384.0],
        [1554638400, 273.0],
        [1554642000, 34.0],
        [1554645600, -473.0],
        [1554649200, -1877.0],
        [1554652800, -200.0],
        [1554656400, -372.0],
        [1554660000, -277.0],
        [1554663600, -137.0],
        [1554667200, 119.0],
        [1554670800, 679.0],
        [1554674400, 1132.0],
        [1554678000, 1387.0],
        [1554681600, 247.0],
        [1554685200, 30.0],
        [1554688800, 21.0],
        [1554692400, -81.0],
        [1554696000, 240.0],
        [1554699600, -342.0],
        [1554703200, 226.0],
        [1554706800, -831.0],
        [1554710400, 808.0],
        [1554714000, -256.0],
        [1554717600, 299.0],
        [1554721200, -364.0],
        [1554724800, -99.0],
        [1554728400, 913.0],
        [1554732000, -825.0],
        [1554735600, -1111.0],
        [1554739200, -1383.0],
        [1554742800, -179.0],
        [1554746400, -251.0],
        [1554750000, -325.0],
        [1554753600, 2.0],
        [1554757200, 1049.0],
        [1554760800, 998.0],
        [1554764400, 1279.0],
        [1554768000, -267.0],
        [1554771600, -10.0],
        [1554775200, 334.0],
        [1554778800, -161.0],
        [1554782400, 714.0],
        [1554786000, -864.0],
        [1554789600, 522.0],
        [1554793200, -353.0],
        [1554796800, -492.0],
        [1554800400, 602.0],
        [1554804000, 37.0],
        [1554807600, -414.0],
        [1554811200, -100.0],
        [1554814800, 131.0],
        [1554818400, -735.0],
        [1554822000, -1622.0],
        [1554825600, -542.0],
        [1554829200, 152.0],
        [1554832800, -193.0],
        [1554836400, -126.0],
        [1554840000, -153.0],
        [1554843600, 501.0],
        [1554847200, 587.0],
        [1554865200, 1110.0],
        [1554868800, -107.0],
        [1554872400, -836.0],
        [1554876000, -769.0],
        [1554879600, -191.0],
        [1554883200, 272.0],
        [1554886800, 584.0],
        [1554890400, 78.0],
        [1554894000, -347.0],
        [1554897600, -742.0],
        [1554901200, 599.0],
        [1554904800, -157.0],
        [1554908400, -933.0],
        [1554912000, 11.0]
      ],
      xAris_data: [
        1554393600,
        1554480000,
        1554566400,
        1554652800,
        1554739200,
        1554825600,
        1554912000
      ],
      yjzx_data: [
        [1554393780, -830.0],
        [1554488520, -886.0],
        [1554574380, -776.0],
        [1554664080, -560.0],
        [1554746640, -518.0],
        [1554834420, -500.0]
      ]
    }
    switch (type) {
      case 1:
        end = res;
        break;
      case 2:
        end = res;
        break;
      default:
        end = res;
        break;
    }
    // return end;
    return new Promise(resolve => {
      resolve(end)
    })
  }
  /* 区域压力变化曲线 */
  _qyylbh(type) {
    let end;
    let res = {
      "min_line_data": [
        ["2019-04-05", "0.220"],
        ["2019-04-06", "0.001"],
        ["2019-04-07", "0.186"],
        ["2019-04-08", "0.117"],
        ["2019-04-09", "0.192"],
        ["2019-04-10", "0.158"],
        ["2019-04-11", "0.168"]
      ],
      "xAris_data": ["2019-04-05", "2019-04-06", "2019-04-07", "2019-04-08", "2019-04-09", "2019-04-10", "2019-04-11"],
      "max_line_data": [
        ["2019-04-05", "0.360"],
        ["2019-04-06", "0.389"],
        ["2019-04-07", "0.375"],
        ["2019-04-08", "0.400"],
        ["2019-04-09", "0.380"],
        ["2019-04-10", "0.370"],
        ["2019-04-11", "0.358"]
      ],
      "avg_line_data": [
        ["2019-04-05", "0.27"],
        ["2019-04-06", "0.28"],
        ["2019-04-07", "0.28"],
        ["2019-04-08", "0.28"],
        ["2019-04-09", "0.28"],
        ["2019-04-10", "0.27"],
        ["2019-04-11", "0.24"]
      ]
    }
    switch (type) {
      case 1:
        end = res;
        break;
      case 2:
        end = res;
        break;
      default:
        end = res;
        break;
    }
    return new Promise(resolve => {
      resolve(end)
    })
  }
  /* 分区统计 */
  _fqtj() {
    let res = {
      "circle_data": {
        "center_name": "\u5e7f\u897f\u8d35\u6e2f\u5317\u63a7\u6c34\u52a1",
        "num": 3,
        "round_data": [{
          "num": 9,
          "name": "1\u53f7\u533a\u57df"
        }, {
          "num": 1,
          "name": "2\u53f7\u533a\u57df"
        }, {
          "num": 0,
          "name": "3\u53f7\u533a\u57df"
        }, {
          "num": 0,
          "name": "4\u53f7\u533a\u57df"
        }, {
          "num": 0,
          "name": "5\u53f7\u533a\u57df"
        }, {
          "num": 0,
          "name": "6\u53f7\u533a\u57df"
        }, {
          "num": 0,
          "name": "7\u53f7\u533a\u57df"
        }]
      },
      "level_data": {
        "level_1": 3,
        "level_2": 7,
        "level_3": 10
      }
    }
    return new Promise(resolve => {
      resolve(res)
    })
  }
  /* 区域供水占比图 */
  _qygs() {
    let res = {
      "\u5357\u6c5f\u6c34\u5382": 19430.0,
      "\u9f99\u5e8a\u4e95\u6c34\u5382": 33640.0
    };
    return new Promise(resolve => {
      resolve(res)
    })
  }
  /* 分区漏损排名 */
  _fqls() {
    let res = [{
      "division_name": "\u5206\u533a1",
      "leakage_percentage": "100.0%",
      "water_supply_month": 189874.0,
      "water_sale_month": 333
    }, {
      "division_name": "\u5206\u533a\u4e8c",
      "leakage_percentage": "10%",
      "water_supply_month": 235465,
      "water_sale_month": 5467
    }]
    return new Promise(resolve => {
      resolve(res)
    })
  }
  /* 小区漏损排名 */
  _xqls() {
    let res = [{
      "division_name": "小区一",
      "leakage_percentage": "93.63%",
      "water_supply_month": 1000,
      "water_sale_month": 3000
    }, {
      "division_name": "小区二",
      "leakage_percentage": "60%",
      "water_supply_month": null,
      "water_sale_month": null
    }, {
      "division_name": "小区三",
      "leakage_percentage": "50%",
      "water_supply_month": null,
      "water_sale_month": null
    }, {
      "division_name": "小区四",
      "leakage_percentage": "20%",
      "water_supply_month": 10,
      "water_sale_month": 20,
    }, {
      "division_name": "小区五",
      "leakage_percentage": "20%",
      "water_supply_month": 10,
      "water_sale_month": 20,
    }, ]
    return new Promise(resolve => {
      resolve(res)
    })
  }
  /* 中间数据展示 */
  _center_data() {
    let res = {
      "water_use": 0.0,
      "water_use_change": -100.0,
      "free": 0.0,
      "water_supply": 465.0,
      "cxc": 465.0,
      "free_change": null,
      "leak": 465.0,
      "cxc_change": 48.94,
      "water_supply_change": 22.39,
      "leak_percentage": 100.0,
      "leak_percentage_change": null,
      "leak_change": 48.94
    }
    return new Promise(resolve => {
      resolve(res)
    })
  }
  /* 地图 */
  _station_list() {
    let res = {
      "Data": [],
      "Total": 0,
      "From": 0,
      "Size": 16
    }
    return new Promise(resolve => {
      resolve(res)
    })
  }
  _fqjl_dvtree() {
    let res = [{
        area: "109.56253051757812 23.122837454984705,109.544677734375 23.122995325859467,109.544677734375 23.09725992157651,109.56338882446289 23.09710202043826",
        color: "#ebf743",
        iconCls: "std",
        iconSkin: "std",
        id: "0001",
        isParent: false,
        lv: 1,
        name: "东关分公司",
        pid: "test2c9c584ce6020c37test",
        _id: "5ad6ffc2718db11580e71752",
      },
      {
        area: "109.56287384033203 23.12331106705174,109.59857940673828 23.12331106705174,109.59789276123047 23.109101977956197,109.56321716308594 23.105312633518658",
        color: "#f587f5",
        iconCls: "std",
        iconSkin: "std",
        id: "dz",
        isParent: false,
        lv: 1,
        name: "德州",
        pid: "test2c9c584ce6020c37test",
        _id: "5b86295ca78d4127b8aa76a0",
      },
      {area: "109.5637321472168 23.104838957945432,109.59239959716797 23.10768098632344,109.5937728881836 23.101207389714883,109.56356048583984 23.097733623877765",
      color: "#1be6f5",
      iconCls: "std",
      iconSkin: "std",
      id: "00012",
      isParent: false,
      lv: 1,
      name: "中科君达测试",
      pid: "test2c9c584ce6020c37test",
      _id: "5bfcb8af910a6108fc6d6c61",}
    ]
    return new Promise(resolve => {
      resolve(res)
    })
  }
}
export default Api;
